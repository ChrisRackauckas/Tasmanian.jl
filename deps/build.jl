using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libtasmaniansparsegrid"], :TASlib),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/floswald/TasBuilder/releases/download/0.2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/TasBuilder.v0.1.0.aarch64-linux-gnu.tar.gz", "32d7892d8a417567c29d2309610a2b5781926e448ce1fdeb76981ab933699b87"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/TasBuilder.v0.1.0.aarch64-linux-musl.tar.gz", "04ca729e5ad1126155a38da6a99f9d2ec048ac4367c3cf8cf96f72c56091606b"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/TasBuilder.v0.1.0.arm-linux-gnueabihf.tar.gz", "bfbd8e998d2cb1b7a01cbb860354c7fc36cf90c583620d2f4e8b07391b649b26"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/TasBuilder.v0.1.0.arm-linux-musleabihf.tar.gz", "2e3a5fe85b1c23fb71d38f643082d5eff8b2002eafc56a69608cec2fceb039b4"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/TasBuilder.v0.1.0.i686-linux-gnu.tar.gz", "d853050137143b3092deaa3f4ed51cce2c93293860f6db91b029dbaa771713f9"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/TasBuilder.v0.1.0.i686-linux-musl.tar.gz", "3ad54894d96721e7606bcfd8c66969e7513d4f51daab2a91a53da74e1bae16ef"),
    Windows(:i686) => ("$bin_prefix/TasBuilder.v0.1.0.i686-w64-mingw32.tar.gz", "a318989c5fc4dc9bd75e4125662fdfcfafbc7ad6e84f1f9a1b72889b6a7d636b"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/TasBuilder.v0.1.0.powerpc64le-linux-gnu.tar.gz", "19dacae7b32e165a636e1319f8314ed84474f1fe72d766967ea318c309be1161"),
    MacOS(:x86_64) => ("$bin_prefix/TasBuilder.v0.1.0.x86_64-apple-darwin14.tar.gz", "15355d68d97a6da35a30ad7d601ca0f79b43ed75ed0230830251b675e06749d0"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/TasBuilder.v0.1.0.x86_64-linux-gnu.tar.gz", "11b4000d07090c0bde9a6067afe84c9096b3627976a23f3f6390b73d58b0c746"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/TasBuilder.v0.1.0.x86_64-linux-musl.tar.gz", "4f8bf75015ca989a76fa6202319caddde6e24fc54b45d826f21782923ce417f4"),
    FreeBSD(:x86_64) => ("$bin_prefix/TasBuilder.v0.1.0.x86_64-unknown-freebsd11.1.tar.gz", "d17e9ba85376637d6384815d1be60f297ea05fc6616fd27c0985adcdbe4900d7"),
    Windows(:x86_64) => ("$bin_prefix/TasBuilder.v0.1.0.x86_64-w64-mingw32.tar.gz", "2f477fa9790154d2cbd9bbcb6ea5d9cffc8bc162fcbc5348284a1663745bce86"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
